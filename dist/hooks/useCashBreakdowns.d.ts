import { AxiosResponse } from 'axios';
import { CamelCasedProperties } from 'type-fest';
import { Params } from '../services/CashBreakdownsService';
import { AxiosErrorResponse, QueryResponse } from '../services/interfaces';
import { CashBreakdown } from '../types';
import { UseListQuery } from './inteface';
declare const useCashBreakdowns: (data?: UseListQuery<CashBreakdown, CamelCasedProperties<Params>>) => import("react-query").UseQueryResult<QueryResponse<CashBreakdown>, Error>;
export declare const useCashBreakdownCreate: () => import("react-query").UseMutationResult<AxiosResponse<CashBreakdown>, AxiosErrorResponse<any>, {
    bills100: number;
    bills1000: number;
    bills20: number;
    bills200: number;
    bills50: number;
    bills500: number;
    branchMachineId: number;
    cashOutMetadata: any;
    cashieringSessionId: number;
    category: import("../types").CashBreakdownCategory;
    coins1: number;
    coins10: number;
    coins20: number;
    coins25: number;
    coins5: number;
    coins50: number;
    remarks: string;
    type: import("../types").CashBreakdownType;
}, unknown>;
export default useCashBreakdowns;
