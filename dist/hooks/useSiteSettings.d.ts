import { UseMutationOptions, UseQueryOptions } from 'react-query';
import { CamelCasedProperties } from 'type-fest';
import { Edit, Params } from '../services/SiteSettingsService';
import { SiteSettings } from '../types';
import { UseListQuery } from './inteface';
import { AxiosResponse } from 'axios';
import { AxiosErrorResponse } from '../services/interfaces';
declare const useSiteSettings: (data?: UseListQuery<SiteSettings, CamelCasedProperties<Params>, UseQueryOptions<SiteSettings>>) => import("react-query").UseQueryResult<SiteSettings, unknown>;
export declare const useSiteSettingsEdit: (options?: UseMutationOptions<AxiosResponse<void>, AxiosErrorResponse, CamelCasedProperties<Edit & {
    id: number;
}>>, baseURL?: string) => import("react-query").UseMutationResult<AxiosResponse<void>, AxiosErrorResponse<any>, {
    addressOfTaxPayer: string;
    appDescription: string;
    closeDayDeadline: string;
    closeSessionDeadline: string;
    contactNumber: string;
    isDiscountAllowedIfCredit: boolean;
    isManualInputAllowed: boolean;
    isMarkdownAllowedIfCredit: boolean;
    isTimeCheckerFeatureEnabled: boolean;
    logoBase64: string;
    posAccreditationDate: string;
    posAccreditationNumber: string;
    posAccreditationValidUntilDate: string;
    productVersion: string;
    proprietor: string;
    ptuDate: string;
    ptuNumber: string;
    ptuValidUntilDate: string;
    reportingPeriodDayOfMonth: string;
    resetCounterNotificationThresholdAmount: number;
    resetCounterNotificationThresholdInvoiceNumber: number;
    invoiceLastMessage: string;
    softwareDeveloperAddress: string;
    softwareDeveloperTin: string;
    softwareDeveloper: string;
    storeName: string;
    taxType: string;
    thankYouMessage: string;
    tin: string;
    id: number;
}, unknown>;
export default useSiteSettings;
